server:
  tomcat:
    max-threads: 500   # 동시 처리 쓰레드 수
    max-connections: 10000  # 최대 연결 수

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${LOCAL_DATASOURCE_URL}
    username: ${LOCAL_DATASOURCE_USERNAME}
    password: ${LOCAL_DATASOURCE_PASSWORD}
    hikari:
      maximum-pool-size: 100          # ⭐ 최대 연결 수
      minimum-idle: 20                # 최소 유휴 커넥션
      idle-timeout: 30000             # 유휴 커넥션 유지 시간 (30초)
      max-lifetime: 1800000           # 커넥션 최대 생존 시간 (30분)
      connection-timeout: 30000        # 커넥션 획득 타임아웃 (30초)
---
spring:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
#        show_sql: true
        format_sql: true
        generate_statistics: true  # Hibernate 통계 활성화
        order_updates: true # 동일한 엔티티 INSERT 문 정렬 최적화
        order_inserts: true
        jdbc:
          fetch_size: 1000 # 데이터 패치 크기
          batch_size: 1000 # 배치 크기
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 500
    open-in-view: false  # OSIV 끄기 (가능하면 끄는 것이 성능적으로 유리)

---
spring:
  shell:
    interactive:
      enabled: true
---
spring:
  data:
    redis:
      host: localhost
      port: 6379

---
logging:
  level:
    org.hibernate.SQL: DEBUG  # SQL 쿼리 출력
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # 바인딩 파라미터 로그
    org.hibernate.engine.jdbc.batch.internal.BatchingBatch: DEBUG  # 배치 쿼리 로그
    com.zaxxer.hikari: DEBUG  # HikariCP 상태 출력
    org.hibernate.SQL_SLOW: WARN

    org:
      springframework:
        jdbc:
          core:
            JdbcTemplate: DEBUG
            StatementCreatorUtils: TRACE

---
common:
  seat:
    available:
      count: 10